{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"Meteor.publish('messages', function (channel) {\n\treturn Messages.find({ channel: channel });\n});\n\nMeteor.publish('channels', function () {\n\treturn Channels.find();\n});\n\nMeteor.publish(\"allUsernames\", function () {\n\treturn Meteor.users.find({}, { fields: {\n\t\t\t\"username\": 1,\n\t\t\t\"services.github.username\": 1\n\t\t} });\n});\n\nMeteor.publish('currentUserName', function () {\n\tvar userId = this.userId,\n\t    data = [Meteor.users.find({ \"_id\": userId }), {\n\t\tfields: {\n\t\t\t\"username\": 1\n\t\t}\n\t}];\n\tif (data) {\n\t\treturn data;\n\t}\n\treturn this.ready();\n});","ast":null,"map":{"version":3,"sources":["/server/publications.js"],"names":[],"mappings":"AAAA,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,UAAU,OAAO,EAAE;AAC7C,QAAO,QAAQ,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;CACzC,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,YAAY;AACtC,QAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;CACvB,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,YAAY;AACzC,QAAO,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,EAAC,MAAM,EAAE;AACrC,aAAU,EAAE,CAAC;AACb,6BAA0B,EAAE,CAAC;GAC7B,EAAC,CAAC,CAAC;CACL,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,CAAC,iBAAiB,EAAE,YAAW;AAC5C,KAAI,MAAM,GAAG,IAAI,CAAC,MAAM;KACxB,IAAI,GAAG,CACN,MAAM,CAAC,KAAK,CAAC,IAAI,CAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAE,EAAE;AACvC,QAAM,EAAE;AACP,aAAU,EAAE,CAAC;GACb;EACD,CACD,CAAC;AACF,KAAI,IAAI,EAAE;AACT,SAAO,IAAI,CAAC;EACZ;AACD,QAAO,IAAI,CAAC,KAAK,EAAE,CAAC;CACpB,CAAC,CAAC","file":"/server/publications.js.map","sourcesContent":["Meteor.publish('messages', function (channel) {\n\treturn Messages.find({channel: channel});\n});\n\nMeteor.publish('channels', function () {\n\treturn Channels.find();\n});\n\nMeteor.publish(\"allUsernames\", function () {\n  return Meteor.users.find({}, {fields: {\n  \t\"username\": 1,\n  \t\"services.github.username\": 1\n  }});\n});\n\nMeteor.publish('currentUserName', function() {\n\tvar userId = this.userId,\n\tdata = [\n\t\tMeteor.users.find( { \"_id\": userId } ), {\n\t\t\tfields: {\n\t\t\t\t\"username\": 1\n\t\t\t}\n\t\t}\n\t];\n\tif (data) {\n\t\treturn data;\n\t}\n\treturn this.ready();\n});\n"]},"hash":"6ef902a98ea8f5ece967e569006318f6586e4cd0"}
